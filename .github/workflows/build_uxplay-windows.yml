# This is a basic workflow to help you get started with Actions

name: build uxplay for windows

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: build uxplay
    # The type of runner that the job will run on
    runs-on: windows-latest    
    permissions:
      contents: write
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: clone the repo
        uses: actions/checkout@v4
        
      # the SDK requires the normal version of Bonjour to be installed first.
      - name: install Bonjour (64 bit)
        run: |
          $currentPath = Get-Location
          $msiFilePath = Join-Path -Path $currentPath -ChildPath "Bonjour64.msi"
          $msiexecArguments = "/i `"$msiFilePath`" /qn /L*v bonjour64.log"
          Start-Process msiexec -ArgumentList $msiexecArguments -NoNewWindow -Wait
      - name: install Bonjour SDK (64 bit)
        run: |
          $currentPath = Get-Location
          $msiFilePath = Join-Path -Path $currentPath -ChildPath "BonjourSDK64.msi"
          $msiexecArguments = "/i `"$msiFilePath`" /qn /L*v bonjoursdk64.log"
          Start-Process msiexec -ArgumentList $msiexecArguments -NoNewWindow -Wait

      - name: downloading Inno Setup
        run: Invoke-WebRequest https://jrsoftware.org/download.php/is.exe -OutFile is.exe

      - name: installing Inno Setup
        run: start (Join-Path -Path $(Get-Location) -ChildPath "innosetup-6.2.2.exe") /VERYSILENT

      - name: check Inno Setup
        run: ls ${env:PROGRAMFILES(X86)}
        
      - name: setup msys2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            git
            zip
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-libplist
            mingw-w64-x86_64-gstreamer
            mingw-w64-x86_64-gst-plugins-base
            mingw-w64-x86_64-gst-libav
            mingw-w64-x86_64-gst-plugins-good
            mingw-w64-x86_64-gst-plugins-bad


            
      - name: building (finally)
        shell: msys2 {0}
        run: |
          uname -a
          git clone https://github.com/FDH2/UxPlay && cd UxPlay
          mkdir build && cd build
          cmake ..
          ninja
          
          mkdir artifact && cd artifact
          cp -r /mingw64/lib lib
          cp -r /mingw64/bin bin
          cp ../uxplay.exe bin
          echo ".\bin\uxplay.exe" > uxplay-windows.bat
          zip -r output.zip lib/ bin/ uxplay-windows.bat
          
      - name: uploading artifact
        uses: actions/upload-artifact@v4
        with:
          name: uxplay-windows
          path: UxPlay/build/artifact/output.zip
